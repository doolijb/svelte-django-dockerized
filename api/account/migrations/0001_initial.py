# Generated by Django 4.0.9 on 2023-02-05 23:22

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='RedeemableKey',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('redeemer_uuid', models.UUIDField(null=True)),
                ('redeemable_uuid', models.UUIDField()),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('redeemed_at', models.DateTimeField(blank=True, null=True)),
                ('redeemable_content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='redeemable_keys', to='contenttypes.contenttype')),
                ('redeemer_content_type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='redeemer_keys', to='contenttypes.contenttype')),
            ],
            options={
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='Password',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('protected_id', models.UUIDField()),
                ('hash', models.CharField(editable=False, max_length=128)),
                ('protected_content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='protected', to='contenttypes.contenttype')),
            ],
            options={
                'verbose_name': 'password',
                'verbose_name_plural': 'passwords',
            },
        ),
        migrations.CreateModel(
            name='EmailAddress',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('emailable_id', models.UUIDField()),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('verified_at', models.DateTimeField(blank=True, null=True)),
                ('is_primary', models.BooleanField(default=False)),
                ('emailable_content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='emailable', to='contenttypes.contenttype')),
            ],
            options={
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('username', models.CharField(max_length=30, unique=True, verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=30, verbose_name='last name')),
                ('is_active', models.BooleanField(default=True, verbose_name='active')),
                ('is_staff', models.BooleanField(default=False, verbose_name='staff status')),
                ('is_superuser', models.BooleanField(default=False, verbose_name='superuser status')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'ordering': ('-created_at',),
                'permissions': (('add_superuser', 'Can add superuser'), ('change_superuser', 'Can change superuser'), ('delete_superuser', 'Can delete superuser'), ('view_superuser', 'Can view superuser')),
            },
        ),
    ]
