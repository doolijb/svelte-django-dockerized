# # # # # # # # # # # # # # # # # # #
# NOTES:                            #
# # # # # # # # # # # # # # # # # # #
#
# This is a development container.
#
# For development, the Django api is
# ran manually from /srv/www/api with
# the manage.py script.
#
# For production, the Django api is
# served natively through NGINX Unit.

# # # # # # # # # # # # # # # # # # #
# BASE IMAGE                        #
# # # # # # # # # # # # # # # # # # #

# Use the NGINX Unit image, which is based on Debian
FROM unit:1.30.0-python3.11

# # # # # # # # # # # # # # # # # # # #
# # DEV ONLY ENV VARIABLES            #
# # # # # # # # # # # # # # # # # # # #

# Keeps Python from generating .pyc files in the container
ENV PYTHONDONTWRITEBYTECODE=1
# Turns off buffering for easier container logging
ENV PYTHONUNBUFFERED=1

# # # # # # # # # # # # # # # # # # # #
# # INSTALL LINUX DEPENCENDIES        #
# # # # # # # # # # # # # # # # # # # #

RUN apt update \
    && apt install -y libpq5 gcc musl-dev libfreetype-dev npm

# Install kill-port globaly
RUN npm install -g kill-port


# # # # # # # # # # # # # # # # # # #
#  COPY API FILES TO CONTAINER      #
# # # # # # # # # # # # # # # # # # #

WORKDIR /srv/www/api
COPY ../api/requirements.base.txt .
COPY ../api/requirements.dev.txt .

# # # # # # # # # # # # # # # # # # #
# INSTALL PYTHON ENVIRONMENT        #
# # # # # # # # # # # # # # # # # # #

# Install required python dependencies
RUN pip install -r requirements.base.txt
# Install dev python dependencies
RUN pip install -r requirements.dev.txt

# # # # # # # # # # # # # # # # # # #
# COPY THE NGINX UNIT CONFIG        #
# # # # # # # # # # # # # # # # # # #

COPY ../server/unit.conf.dev.json /var/lib/unit/conf.json

# # # # # # # # # # # # # # # # # # #
# OPEN CONTAINER PORTS              #
# # # # # # # # # # # # # # # # # # #

# Expose application port ( represents port 80 in production )
EXPOSE 8000
# Expose unitd api port ( do not expose to the internet! )
EXPOSE 8090
